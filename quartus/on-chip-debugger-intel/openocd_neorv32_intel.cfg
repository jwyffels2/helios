# use Altera Blaster cable as (slow) JTAG connection
source [find interface/altera-usb-blaster.cfg]


# Intel (Altera) Cyclone IV E FPGA
if { [info exists CHIPNAME] } {
        set _CHIPNAME $CHIPNAME
} else {
        set _CHIPNAME cycloneive
}


# Subsidiary TAP: fpga (tap)
# EP4CE15F23C8 has id 0x020f20dd
jtag newtap $_CHIPNAME tap -irlen 10 -expected-id 0x020f20dd


# NEOrv32 https://github.com/stnolting/neorv32
if { [info exists CPUNAME] } {
        set _CPUNAME $CPUNAME
} else {
        set _CPUNAME neorv32
}

set _TARGETNAME $_CHIPNAME.$_CPUNAME


# NEOrv32 target
target create $_TARGETNAME riscv -chain-position $_CHIPNAME.tap

# We use the Intel JTAG atom that only exposes USR0 & USR1, remap registers.
# riscv set_ir idcode 0x09 inacessible, handled by fpga tap
riscv set_ir dtmcs 0x00c
riscv set_ir dmi 0x00e

# Access memory via program buffer
# riscv set_mem_access progbuf <-- openocd does not know this command?

# Scratch pad RAM
# work area ("scratch pad RAM"): beginning of (internal) DMEM, 256 bytes, requires(!) backup
$_TARGETNAME configure -work-area-phys 0x80000000 -work-area-size 256 -work-area-backup 1

# Expose NEORV32-specific CSRs
riscv expose_csrs 4032


# Start session
init
halt

echo "Target HALTED."
echo "Ready for remote connections."
