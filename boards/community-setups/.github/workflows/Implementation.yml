name: Implementation

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:


  Matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}

    steps:

    - name: '🧰 Repository Checkout'
      uses: actions/checkout@v5

    - name: '🔧 Generate examples matrix'
      id: generate
      run: ./.github/generate-job-matrix.py


  All-in-one:
    needs: Matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.Matrix.outputs.matrix) }}
    name: '🛳️ All-in-one | ${{ matrix.board }} · ${{ matrix.design }}'

    steps:

    - name: '🧰 Repository Checkout'
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: recursive

    - name: '🚧 Generate ${{ matrix.board }} ${{ matrix.design }} bitstream'
      uses: docker://ghcr.io/stnolting/neorv32/impl
      with:
        args: make -C osflow BOARD=${{ matrix.board }} ${{ matrix.design }}

    - name: '📤 Upload Artifact: ${{ matrix.board }} ${{ matrix.design }} bitstream and reports'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.board }}-${{ matrix.design }}
        path: |
          osflow/${{ matrix.bitstream }}
          osflow/${{ matrix.board }}/*-report.txt


# Windows:
#   needs: Matrix
#   runs-on: windows-latest
#   strategy:
#     fail-fast: false
#     matrix:
#       include: ${{ fromJson(needs.Matrix.outputs.matrix) }}
#   name: '🟦 MINGW64 | ${{ matrix.board }} · ${{ matrix.design }}'
#   defaults:
#     run:
#       shell: msys2 {0}
#   steps:
#
#   - name: '🟦 Setup MSYS2'
#     uses: msys2/setup-msys2@v2
#     with:
#       msystem: MINGW64
#       update: true
#       install: make
#       pacboy: >
#         yosys:p
#         nextpnr:p
#         icestorm:p
#         prjtrellis:p
#
#   - name: '⚙️ git config'
#     run: git config --global core.autocrlf input
#     shell: bash
#
#   - name: '🧰 Checkout'
#     uses: actions/checkout@v5
#     with:
#       fetch-depth: 0
#       submodules: recursive
#
#   - name: '🚧 Generate ${{ matrix.board }} ${{ matrix.design }} bitstream'
#     run: make -C osflow BOARD=${{ matrix.board }} ${{ matrix.design }}
